
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ANY CLBR COMMA COMMAND COMP DO END EOE EQ FLOAT FROM FUNC IF INT LOGIC MINUS MOVE NL OPBR OR PLUS STEP STR TCELL TO WITHprogram : statementsstatements : statements statement\n                     | statementstatement : assignment eoe\n                     | from eoe\n                     | var_const eoe\n                     | if eoe\n                     | function eoe\n                     | call_func eoe\n                     | commands eoecommands : COMMAND MOVEeoe : NL\n               | EOE\n               | EOE NLassignment : variable EQ expressionassignment : variable EQ errorvariable : STR index\n                   | STR OPBR index CLBRindex :\n                 | index COMMA INT\n                 | INTexpression : var_const\n                      | operation\n                      | un_operation\n                      | call_func\n                      | commands\n                      | logic_opervar_const : variable\n                     | constconst : INT\n                 | FLOAT\n                 | LOGIC\n                 | TCELLoperation : expression PLUS expression\n                     | expression MINUS expressionun_operation : MINUS expressionfrom : FROM expression TO expression DO FUNC NL statements END\n                | FROM expression TO expression call_func\n                | FROM expression TO expression WITH STEP expression DO FUNC NL statements END\n                | FROM expression TO expression WITH STEP expression call_funcfrom : FROM expression TO expression WITH STEP expression DO FUNC error statements END\n                | FROM expression TO expression DO FUNC error statements END\n                | FROM expression error expression WITH STEP expression DO FUNC NL statements END\n                | FROM expression error expression DO FUNC NL statements END\n                | FROM expression TO expression WITH STEP expression DO error NL statements END\n                | FROM expression TO expression DO error NL statements END\n                | FROM expression TO expression error FUNC NL statements END\n                | FROM expression TO expression WITH STEP expression error FUNC NL statements ENDcall_func : DO STRif : IF expression call_func\n              | IF expression DO FUNC NL statements ENDif : IF expression DO FUNC error statements END\n              | IF expression DO error NL statements END\n              | IF error DO FUNC NL statements END\n              | IF error call_func\n              | IF expression error FUNC NL statements ENDlogic_oper : expression AND expression\n                      | expression OR expression\n                      | var_const COMP variable\n                      | variablefunction : FUNC STR NL statements ENDfunction : FUNC STR error statements END\n                    | error STR NL statements END'
    
_lr_action_items = {'FROM':([0,2,3,24,25,26,27,28,29,30,31,32,33,53,56,65,66,74,82,83,99,100,101,102,103,110,111,112,113,114,115,116,117,119,121,127,128,129,133,135,145,146,147,148,149,150,151,152,153,154,],[13,13,-3,-2,-4,-12,-13,-5,-6,-7,-8,-9,-10,-14,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'IF':([0,2,3,24,25,26,27,28,29,30,31,32,33,53,56,65,66,74,82,83,99,100,101,102,103,110,111,112,113,114,115,116,117,119,121,127,128,129,133,135,145,146,147,148,149,150,151,152,153,154,],[17,17,-3,-2,-4,-12,-13,-5,-6,-7,-8,-9,-10,-14,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'FUNC':([0,2,3,24,25,26,27,28,29,30,31,32,33,53,56,65,66,68,69,70,74,82,83,91,94,96,99,100,101,102,103,110,111,112,113,114,115,116,117,119,121,127,128,129,130,132,133,134,135,145,146,147,148,149,150,151,152,153,154,],[15,15,-3,-2,-4,-12,-13,-5,-6,-7,-8,-9,-10,-14,15,15,15,84,86,87,15,15,15,104,107,109,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,139,141,15,143,15,15,15,15,15,15,15,15,15,15,15,]),'error':([0,2,3,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,36,37,38,39,40,41,42,43,45,46,47,49,51,52,53,56,64,65,66,68,74,75,77,78,79,80,81,82,83,84,88,89,91,99,100,101,102,103,104,110,111,112,113,114,115,116,117,118,119,121,127,128,129,130,133,135,139,145,146,147,148,149,150,151,152,153,154,],[12,12,-3,-29,48,-19,-30,-31,-32,-33,-2,-4,-12,-13,-5,-6,-7,-8,-9,-10,55,58,-25,-22,-23,-24,-26,-27,-28,-49,66,69,-17,-21,-11,-14,12,-36,12,12,85,12,94,-34,-35,-57,-58,-59,12,12,100,-20,-18,105,12,12,12,12,12,116,12,12,12,12,12,12,12,12,132,12,12,12,12,12,140,12,12,146,12,12,12,12,12,12,12,12,12,12,]),'DO':([0,2,3,13,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,38,39,40,41,42,43,44,45,47,48,49,51,52,53,56,57,58,59,60,61,62,64,65,66,74,75,76,77,78,79,80,81,82,83,88,89,99,100,101,102,103,106,108,110,111,112,113,114,115,116,117,118,119,120,121,127,128,129,133,135,145,146,147,148,149,150,151,152,153,154,],[14,14,-3,14,-29,14,-19,-30,-31,-32,-33,-2,-4,-12,-13,-5,-6,-7,-8,-9,-10,14,-25,-22,-23,-24,-26,-27,-28,14,-49,68,70,-17,-21,-11,-14,14,14,14,14,14,14,14,-36,14,14,14,91,96,-34,-35,-57,-58,-59,14,14,-20,-18,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,130,14,134,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'COMMAND':([0,2,3,13,17,24,25,26,27,28,29,30,31,32,33,34,44,53,56,57,58,59,60,61,62,65,66,74,82,83,99,100,101,102,103,106,108,110,111,112,113,114,115,116,117,119,121,127,128,129,133,135,145,146,147,148,149,150,151,152,153,154,],[19,19,-3,19,19,-2,-4,-12,-13,-5,-6,-7,-8,-9,-10,19,19,-14,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'STR':([0,2,3,12,13,14,15,17,24,25,26,27,28,29,30,31,32,33,34,44,53,56,57,58,59,60,61,62,63,65,66,68,70,74,82,83,91,99,100,101,102,103,106,108,110,111,112,113,114,115,116,117,119,121,127,128,129,130,133,135,145,146,147,148,149,150,151,152,153,154,],[18,18,-3,35,18,45,46,18,-2,-4,-12,-13,-5,-6,-7,-8,-9,-10,18,18,-14,18,18,18,18,18,18,18,18,18,18,45,45,18,18,18,45,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,45,18,18,18,18,18,18,18,18,18,18,18,18,]),'INT':([0,2,3,13,17,18,24,25,26,27,28,29,30,31,32,33,34,44,50,53,56,57,58,59,60,61,62,65,66,72,74,82,83,99,100,101,102,103,106,108,110,111,112,113,114,115,116,117,119,121,127,128,129,133,135,145,146,147,148,149,150,151,152,153,154,],[20,20,-3,20,20,51,-2,-4,-12,-13,-5,-6,-7,-8,-9,-10,20,20,51,-14,20,20,20,20,20,20,20,20,20,88,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'FLOAT':([0,2,3,13,17,24,25,26,27,28,29,30,31,32,33,34,44,53,56,57,58,59,60,61,62,65,66,74,82,83,99,100,101,102,103,106,108,110,111,112,113,114,115,116,117,119,121,127,128,129,133,135,145,146,147,148,149,150,151,152,153,154,],[21,21,-3,21,21,-2,-4,-12,-13,-5,-6,-7,-8,-9,-10,21,21,-14,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'LOGIC':([0,2,3,13,17,24,25,26,27,28,29,30,31,32,33,34,44,53,56,57,58,59,60,61,62,65,66,74,82,83,99,100,101,102,103,106,108,110,111,112,113,114,115,116,117,119,121,127,128,129,133,135,145,146,147,148,149,150,151,152,153,154,],[22,22,-3,22,22,-2,-4,-12,-13,-5,-6,-7,-8,-9,-10,22,22,-14,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'TCELL':([0,2,3,13,17,24,25,26,27,28,29,30,31,32,33,34,44,53,56,57,58,59,60,61,62,65,66,74,82,83,99,100,101,102,103,106,108,110,111,112,113,114,115,116,117,119,121,127,128,129,133,135,145,146,147,148,149,150,151,152,153,154,],[23,23,-3,23,23,-2,-4,-12,-13,-5,-6,-7,-8,-9,-10,23,23,-14,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'$end':([1,2,3,24,25,26,27,28,29,30,31,32,33,53,],[0,-1,-3,-2,-4,-12,-13,-5,-6,-7,-8,-9,-10,-14,]),'END':([3,24,25,26,27,28,29,30,31,32,33,53,74,82,83,110,111,112,113,114,127,128,129,133,135,150,151,152,153,154,],[-3,-2,-4,-12,-13,-5,-6,-7,-8,-9,-10,-14,90,97,98,122,123,124,125,126,136,137,138,142,144,155,156,157,158,159,]),'NL':([4,5,6,7,8,9,10,11,16,18,20,21,22,23,27,35,37,38,39,40,41,42,43,45,46,49,51,52,54,55,64,67,71,77,78,79,80,81,84,85,86,87,88,89,90,92,97,98,104,105,107,109,122,123,124,125,126,131,136,137,138,139,140,141,142,143,144,155,156,157,158,159,],[26,26,26,26,26,26,26,-28,-29,-19,-30,-31,-32,-33,53,56,-25,-22,-23,-24,-26,-27,-28,-49,65,-17,-21,-11,-15,-16,-36,-50,-55,-34,-35,-57,-58,-59,99,101,102,103,-20,-18,-63,-38,-61,-62,115,117,119,121,-51,-52,-53,-56,-54,-40,-37,-42,-46,145,147,148,-47,149,-44,-39,-41,-45,-48,-43,]),'EOE':([4,5,6,7,8,9,10,11,16,18,20,21,22,23,37,38,39,40,41,42,43,45,49,51,52,54,55,64,67,71,77,78,79,80,81,88,89,90,92,97,98,122,123,124,125,126,131,136,137,138,142,144,155,156,157,158,159,],[27,27,27,27,27,27,27,-28,-29,-19,-30,-31,-32,-33,-25,-22,-23,-24,-26,-27,-28,-49,-17,-21,-11,-15,-16,-36,-50,-55,-34,-35,-57,-58,-59,-20,-18,-63,-38,-61,-62,-51,-52,-53,-56,-54,-40,-37,-42,-46,-47,-44,-39,-41,-45,-48,-43,]),'EQ':([11,18,49,51,88,89,],[34,-19,-17,-21,-20,-18,]),'MINUS':([13,16,17,18,20,21,22,23,34,36,37,38,39,40,41,42,43,44,45,47,49,51,52,54,57,58,59,60,61,62,64,75,76,77,78,79,80,81,88,89,106,108,118,120,],[44,-29,44,-19,-30,-31,-32,-33,44,60,-25,-22,-23,-24,-26,-27,-28,44,-49,60,-17,-21,-11,60,44,44,44,44,44,44,60,60,60,60,60,60,60,-59,-20,-18,44,44,60,60,]),'COMP':([16,18,20,21,22,23,38,43,49,51,88,89,],[-29,-19,-30,-31,-32,-33,63,-28,-17,-21,-20,-18,]),'TO':([16,18,20,21,22,23,36,37,38,39,40,41,42,43,45,49,51,52,64,77,78,79,80,81,88,89,],[-29,-19,-30,-31,-32,-33,57,-25,-22,-23,-24,-26,-27,-28,-49,-17,-21,-11,-36,-34,-35,-57,-58,-59,-20,-18,]),'PLUS':([16,18,20,21,22,23,36,37,38,39,40,41,42,43,45,47,49,51,52,54,64,75,76,77,78,79,80,81,88,89,118,120,],[-29,-19,-30,-31,-32,-33,59,-25,-22,-23,-24,-26,-27,-28,-49,59,-17,-21,-11,59,59,59,59,59,59,59,59,-59,-20,-18,59,59,]),'AND':([16,18,20,21,22,23,36,37,38,39,40,41,42,43,45,47,49,51,52,54,64,75,76,77,78,79,80,81,88,89,118,120,],[-29,-19,-30,-31,-32,-33,61,-25,-22,-23,-24,-26,-27,-28,-49,61,-17,-21,-11,61,61,61,61,61,61,61,61,-59,-20,-18,61,61,]),'OR':([16,18,20,21,22,23,36,37,38,39,40,41,42,43,45,47,49,51,52,54,64,75,76,77,78,79,80,81,88,89,118,120,],[-29,-19,-30,-31,-32,-33,62,-25,-22,-23,-24,-26,-27,-28,-49,62,-17,-21,-11,62,62,62,62,62,62,62,62,-59,-20,-18,62,62,]),'WITH':([16,18,20,21,22,23,37,38,39,40,41,42,43,45,49,51,52,64,75,76,77,78,79,80,81,88,89,],[-29,-19,-30,-31,-32,-33,-25,-22,-23,-24,-26,-27,-28,-49,-17,-21,-11,-36,93,95,-34,-35,-57,-58,-59,-20,-18,]),'OPBR':([18,],[50,]),'COMMA':([18,49,50,51,73,88,],[-19,72,-19,-21,72,-20,]),'MOVE':([19,],[52,]),'CLBR':([50,51,73,88,],[-19,-21,89,-20,]),'STEP':([93,95,],[106,108,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,56,65,66,99,100,101,102,103,115,116,117,119,121,145,146,147,148,149,],[2,74,82,83,110,111,112,113,114,127,128,129,133,135,150,151,152,153,154,]),'statement':([0,2,56,65,66,74,82,83,99,100,101,102,103,110,111,112,113,114,115,116,117,119,121,127,128,129,133,135,145,146,147,148,149,150,151,152,153,154,],[3,24,3,3,3,24,24,24,3,3,3,3,3,24,24,24,24,24,3,3,3,3,3,24,24,24,24,24,3,3,3,3,3,24,24,24,24,24,]),'assignment':([0,2,56,65,66,74,82,83,99,100,101,102,103,110,111,112,113,114,115,116,117,119,121,127,128,129,133,135,145,146,147,148,149,150,151,152,153,154,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'from':([0,2,56,65,66,74,82,83,99,100,101,102,103,110,111,112,113,114,115,116,117,119,121,127,128,129,133,135,145,146,147,148,149,150,151,152,153,154,],[5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'var_const':([0,2,13,17,34,44,56,57,58,59,60,61,62,65,66,74,82,83,99,100,101,102,103,106,108,110,111,112,113,114,115,116,117,119,121,127,128,129,133,135,145,146,147,148,149,150,151,152,153,154,],[6,6,38,38,38,38,6,38,38,38,38,38,38,6,6,6,6,6,6,6,6,6,6,38,38,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'if':([0,2,56,65,66,74,82,83,99,100,101,102,103,110,111,112,113,114,115,116,117,119,121,127,128,129,133,135,145,146,147,148,149,150,151,152,153,154,],[7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'function':([0,2,56,65,66,74,82,83,99,100,101,102,103,110,111,112,113,114,115,116,117,119,121,127,128,129,133,135,145,146,147,148,149,150,151,152,153,154,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'call_func':([0,2,13,17,34,44,47,48,56,57,58,59,60,61,62,65,66,74,75,82,83,99,100,101,102,103,106,108,110,111,112,113,114,115,116,117,118,119,121,127,128,129,133,135,145,146,147,148,149,150,151,152,153,154,],[9,9,37,37,37,37,67,71,9,37,37,37,37,37,37,9,9,9,92,9,9,9,9,9,9,9,37,37,9,9,9,9,9,9,9,9,131,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'commands':([0,2,13,17,34,44,56,57,58,59,60,61,62,65,66,74,82,83,99,100,101,102,103,106,108,110,111,112,113,114,115,116,117,119,121,127,128,129,133,135,145,146,147,148,149,150,151,152,153,154,],[10,10,41,41,41,41,10,41,41,41,41,41,41,10,10,10,10,10,10,10,10,10,10,41,41,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'variable':([0,2,13,17,34,44,56,57,58,59,60,61,62,63,65,66,74,82,83,99,100,101,102,103,106,108,110,111,112,113,114,115,116,117,119,121,127,128,129,133,135,145,146,147,148,149,150,151,152,153,154,],[11,11,43,43,43,43,11,43,43,43,43,43,43,81,11,11,11,11,11,11,11,11,11,11,43,43,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'const':([0,2,13,17,34,44,56,57,58,59,60,61,62,65,66,74,82,83,99,100,101,102,103,106,108,110,111,112,113,114,115,116,117,119,121,127,128,129,133,135,145,146,147,148,149,150,151,152,153,154,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'eoe':([4,5,6,7,8,9,10,],[25,28,29,30,31,32,33,]),'expression':([13,17,34,44,57,58,59,60,61,62,106,108,],[36,47,54,64,75,76,77,78,79,80,118,120,]),'operation':([13,17,34,44,57,58,59,60,61,62,106,108,],[39,39,39,39,39,39,39,39,39,39,39,39,]),'un_operation':([13,17,34,44,57,58,59,60,61,62,106,108,],[40,40,40,40,40,40,40,40,40,40,40,40,]),'logic_oper':([13,17,34,44,57,58,59,60,61,62,106,108,],[42,42,42,42,42,42,42,42,42,42,42,42,]),'index':([18,50,],[49,73,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','Parcer.py',26),
  ('statements -> statements statement','statements',2,'p_statements','Parcer.py',30),
  ('statements -> statement','statements',1,'p_statements','Parcer.py',31),
  ('statement -> assignment eoe','statement',2,'p_statement','Parcer.py',38),
  ('statement -> from eoe','statement',2,'p_statement','Parcer.py',39),
  ('statement -> var_const eoe','statement',2,'p_statement','Parcer.py',40),
  ('statement -> if eoe','statement',2,'p_statement','Parcer.py',41),
  ('statement -> function eoe','statement',2,'p_statement','Parcer.py',42),
  ('statement -> call_func eoe','statement',2,'p_statement','Parcer.py',43),
  ('statement -> commands eoe','statement',2,'p_statement','Parcer.py',44),
  ('commands -> COMMAND MOVE','commands',2,'p_commands','Parcer.py',48),
  ('eoe -> NL','eoe',1,'p_eoe','Parcer.py',53),
  ('eoe -> EOE','eoe',1,'p_eoe','Parcer.py',54),
  ('eoe -> EOE NL','eoe',2,'p_eoe','Parcer.py',55),
  ('assignment -> variable EQ expression','assignment',3,'p_assignment','Parcer.py',59),
  ('assignment -> variable EQ error','assignment',3,'p_assigmnent_error','Parcer.py',63),
  ('variable -> STR index','variable',2,'p_variable','Parcer.py',68),
  ('variable -> STR OPBR index CLBR','variable',4,'p_variable','Parcer.py',69),
  ('index -> <empty>','index',0,'p_index','Parcer.py',78),
  ('index -> index COMMA INT','index',3,'p_index','Parcer.py',79),
  ('index -> INT','index',1,'p_index','Parcer.py',80),
  ('expression -> var_const','expression',1,'p_expression','Parcer.py',90),
  ('expression -> operation','expression',1,'p_expression','Parcer.py',91),
  ('expression -> un_operation','expression',1,'p_expression','Parcer.py',92),
  ('expression -> call_func','expression',1,'p_expression','Parcer.py',93),
  ('expression -> commands','expression',1,'p_expression','Parcer.py',94),
  ('expression -> logic_oper','expression',1,'p_expression','Parcer.py',95),
  ('var_const -> variable','var_const',1,'p_var_const','Parcer.py',99),
  ('var_const -> const','var_const',1,'p_var_const','Parcer.py',100),
  ('const -> INT','const',1,'p_const','Parcer.py',104),
  ('const -> FLOAT','const',1,'p_const','Parcer.py',105),
  ('const -> LOGIC','const',1,'p_const','Parcer.py',106),
  ('const -> TCELL','const',1,'p_const','Parcer.py',107),
  ('operation -> expression PLUS expression','operation',3,'p_operation','Parcer.py',111),
  ('operation -> expression MINUS expression','operation',3,'p_operation','Parcer.py',112),
  ('un_operation -> MINUS expression','un_operation',2,'p_un_operation','Parcer.py',116),
  ('from -> FROM expression TO expression DO FUNC NL statements END','from',9,'p_from','Parcer.py',120),
  ('from -> FROM expression TO expression call_func','from',5,'p_from','Parcer.py',121),
  ('from -> FROM expression TO expression WITH STEP expression DO FUNC NL statements END','from',12,'p_from','Parcer.py',122),
  ('from -> FROM expression TO expression WITH STEP expression call_func','from',8,'p_from','Parcer.py',123),
  ('from -> FROM expression TO expression WITH STEP expression DO FUNC error statements END','from',12,'p_from_error','Parcer.py',138),
  ('from -> FROM expression TO expression DO FUNC error statements END','from',9,'p_from_error','Parcer.py',139),
  ('from -> FROM expression error expression WITH STEP expression DO FUNC NL statements END','from',12,'p_from_error','Parcer.py',140),
  ('from -> FROM expression error expression DO FUNC NL statements END','from',9,'p_from_error','Parcer.py',141),
  ('from -> FROM expression TO expression WITH STEP expression DO error NL statements END','from',12,'p_from_error','Parcer.py',142),
  ('from -> FROM expression TO expression DO error NL statements END','from',9,'p_from_error','Parcer.py',143),
  ('from -> FROM expression TO expression error FUNC NL statements END','from',9,'p_from_error','Parcer.py',144),
  ('from -> FROM expression TO expression WITH STEP expression error FUNC NL statements END','from',12,'p_from_error','Parcer.py',145),
  ('call_func -> DO STR','call_func',2,'p_call_func','Parcer.py',153),
  ('if -> IF expression call_func','if',3,'p_if','Parcer.py',158),
  ('if -> IF expression DO FUNC NL statements END','if',7,'p_if','Parcer.py',159),
  ('if -> IF expression DO FUNC error statements END','if',7,'p_if_error','Parcer.py',166),
  ('if -> IF expression DO error NL statements END','if',7,'p_if_error','Parcer.py',167),
  ('if -> IF error DO FUNC NL statements END','if',7,'p_if_error','Parcer.py',168),
  ('if -> IF error call_func','if',3,'p_if_error','Parcer.py',169),
  ('if -> IF expression error FUNC NL statements END','if',7,'p_if_error','Parcer.py',170),
  ('logic_oper -> expression AND expression','logic_oper',3,'p_logic_oper','Parcer.py',178),
  ('logic_oper -> expression OR expression','logic_oper',3,'p_logic_oper','Parcer.py',179),
  ('logic_oper -> var_const COMP variable','logic_oper',3,'p_logic_oper','Parcer.py',180),
  ('logic_oper -> variable','logic_oper',1,'p_logic_oper','Parcer.py',181),
  ('function -> FUNC STR NL statements END','function',5,'p_function','Parcer.py',188),
  ('function -> FUNC STR error statements END','function',5,'p_function_error','Parcer.py',194),
  ('function -> error STR NL statements END','function',5,'p_function_error','Parcer.py',195),
]
