Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ANY

Grammar

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     statements -> statements statement
Rule 3     statements -> statement
Rule 4     statement -> assignment eoe
Rule 5     statement -> from eoe
Rule 6     statement -> var_const eoe
Rule 7     statement -> if eoe
Rule 8     statement -> function eoe
Rule 9     statement -> call_func eoe
Rule 10    statement -> commands eoe
Rule 11    commands -> COMMAND MOVE
Rule 12    eoe -> NL
Rule 13    eoe -> EOE
Rule 14    eoe -> EOE NL
Rule 15    assignment -> variable EQ expression
Rule 16    assignment -> variable EQ error
Rule 17    variable -> STR index
Rule 18    variable -> STR OPBR index CLBR
Rule 19    index -> <empty>
Rule 20    index -> index COMMA INT
Rule 21    index -> INT
Rule 22    expression -> var_const
Rule 23    expression -> operation
Rule 24    expression -> un_operation
Rule 25    expression -> call_func
Rule 26    expression -> commands
Rule 27    expression -> logic_oper
Rule 28    var_const -> variable
Rule 29    var_const -> const
Rule 30    const -> INT
Rule 31    const -> FLOAT
Rule 32    const -> LOGIC
Rule 33    const -> TCELL
Rule 34    operation -> expression PLUS expression
Rule 35    operation -> expression MINUS expression
Rule 36    un_operation -> MINUS expression
Rule 37    from -> FROM expression TO expression DO FUNC NL statements END
Rule 38    from -> FROM expression TO expression call_func
Rule 39    from -> FROM expression TO expression WITH STEP expression DO FUNC NL statements END
Rule 40    from -> FROM expression TO expression WITH STEP expression call_func
Rule 41    from -> FROM expression TO expression WITH STEP expression DO FUNC error statements END
Rule 42    from -> FROM expression TO expression DO FUNC error statements END
Rule 43    from -> FROM expression error expression WITH STEP expression DO FUNC NL statements END
Rule 44    from -> FROM expression error expression DO FUNC NL statements END
Rule 45    from -> FROM expression TO expression WITH STEP expression DO error NL statements END
Rule 46    from -> FROM expression TO expression DO error NL statements END
Rule 47    from -> FROM expression TO expression error FUNC NL statements END
Rule 48    from -> FROM expression TO expression WITH STEP expression error FUNC NL statements END
Rule 49    call_func -> DO STR
Rule 50    if -> IF expression call_func
Rule 51    if -> IF expression DO FUNC NL statements END
Rule 52    if -> IF expression DO FUNC error statements END
Rule 53    if -> IF expression DO error NL statements END
Rule 54    if -> IF error DO FUNC NL statements END
Rule 55    if -> IF error call_func
Rule 56    if -> IF expression error FUNC NL statements END
Rule 57    logic_oper -> expression AND expression
Rule 58    logic_oper -> expression OR expression
Rule 59    logic_oper -> var_const COMP variable
Rule 60    logic_oper -> variable
Rule 61    function -> FUNC STR NL statements END
Rule 62    function -> FUNC STR error statements END
Rule 63    function -> error STR NL statements END

Terminals, with rules where they appear

AND                  : 57
ANY                  : 
CLBR                 : 18
COMMA                : 20
COMMAND              : 11
COMP                 : 59
DO                   : 37 39 41 42 43 44 45 46 49 51 52 53 54
END                  : 37 39 41 42 43 44 45 46 47 48 51 52 53 54 56 61 62 63
EOE                  : 13 14
EQ                   : 15 16
FLOAT                : 31
FROM                 : 37 38 39 40 41 42 43 44 45 46 47 48
FUNC                 : 37 39 41 42 43 44 47 48 51 52 54 56 61 62
IF                   : 50 51 52 53 54 55 56
INT                  : 20 21 30
LOGIC                : 32
MINUS                : 35 36
MOVE                 : 11
NL                   : 12 14 37 39 43 44 45 46 47 48 51 53 54 56 61 63
OPBR                 : 18
OR                   : 58
PLUS                 : 34
STEP                 : 39 40 41 43 45 48
STR                  : 17 18 49 61 62 63
TCELL                : 33
TO                   : 37 38 39 40 41 42 45 46 47 48
WITH                 : 39 40 41 43 45 48
error                : 16 41 42 43 44 45 46 47 48 52 53 54 55 56 62 63

Nonterminals, with rules where they appear

assignment           : 4
call_func            : 9 25 38 40 50 55
commands             : 10 26
const                : 29
eoe                  : 4 5 6 7 8 9 10
expression           : 15 34 34 35 35 36 37 37 38 38 39 39 39 40 40 40 41 41 41 42 42 43 43 43 44 44 45 45 45 46 46 47 47 48 48 48 50 51 52 53 56 57 57 58 58
from                 : 5
function             : 8
if                   : 7
index                : 17 18 20
logic_oper           : 27
operation            : 23
program              : 0
statement            : 2 3
statements           : 1 2 37 39 41 42 43 44 45 46 47 48 51 52 53 54 56 61 62 63
un_operation         : 24
var_const            : 6 22 59
variable             : 15 16 28 59 60

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    program                        shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 1

    (0) S' -> program .



state 2

    (1) program -> statements .
    (2) statements -> statements . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    $end            reduce using rule 1 (program -> statements .)
    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statement                      shift and go to state 24
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 3

    (3) statements -> statement .

    FROM            reduce using rule 3 (statements -> statement .)
    IF              reduce using rule 3 (statements -> statement .)
    FUNC            reduce using rule 3 (statements -> statement .)
    error           reduce using rule 3 (statements -> statement .)
    DO              reduce using rule 3 (statements -> statement .)
    COMMAND         reduce using rule 3 (statements -> statement .)
    STR             reduce using rule 3 (statements -> statement .)
    INT             reduce using rule 3 (statements -> statement .)
    FLOAT           reduce using rule 3 (statements -> statement .)
    LOGIC           reduce using rule 3 (statements -> statement .)
    TCELL           reduce using rule 3 (statements -> statement .)
    $end            reduce using rule 3 (statements -> statement .)
    END             reduce using rule 3 (statements -> statement .)


state 4

    (4) statement -> assignment . eoe
    (12) eoe -> . NL
    (13) eoe -> . EOE
    (14) eoe -> . EOE NL

    NL              shift and go to state 26
    EOE             shift and go to state 27

    eoe                            shift and go to state 25

state 5

    (5) statement -> from . eoe
    (12) eoe -> . NL
    (13) eoe -> . EOE
    (14) eoe -> . EOE NL

    NL              shift and go to state 26
    EOE             shift and go to state 27

    eoe                            shift and go to state 28

state 6

    (6) statement -> var_const . eoe
    (12) eoe -> . NL
    (13) eoe -> . EOE
    (14) eoe -> . EOE NL

    NL              shift and go to state 26
    EOE             shift and go to state 27

    eoe                            shift and go to state 29

state 7

    (7) statement -> if . eoe
    (12) eoe -> . NL
    (13) eoe -> . EOE
    (14) eoe -> . EOE NL

    NL              shift and go to state 26
    EOE             shift and go to state 27

    eoe                            shift and go to state 30

state 8

    (8) statement -> function . eoe
    (12) eoe -> . NL
    (13) eoe -> . EOE
    (14) eoe -> . EOE NL

    NL              shift and go to state 26
    EOE             shift and go to state 27

    eoe                            shift and go to state 31

state 9

    (9) statement -> call_func . eoe
    (12) eoe -> . NL
    (13) eoe -> . EOE
    (14) eoe -> . EOE NL

    NL              shift and go to state 26
    EOE             shift and go to state 27

    eoe                            shift and go to state 32

state 10

    (10) statement -> commands . eoe
    (12) eoe -> . NL
    (13) eoe -> . EOE
    (14) eoe -> . EOE NL

    NL              shift and go to state 26
    EOE             shift and go to state 27

    eoe                            shift and go to state 33

state 11

    (15) assignment -> variable . EQ expression
    (16) assignment -> variable . EQ error
    (28) var_const -> variable .

    EQ              shift and go to state 34
    NL              reduce using rule 28 (var_const -> variable .)
    EOE             reduce using rule 28 (var_const -> variable .)


state 12

    (63) function -> error . STR NL statements END

    STR             shift and go to state 35


state 13

    (37) from -> FROM . expression TO expression DO FUNC NL statements END
    (38) from -> FROM . expression TO expression call_func
    (39) from -> FROM . expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> FROM . expression TO expression WITH STEP expression call_func
    (41) from -> FROM . expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> FROM . expression TO expression DO FUNC error statements END
    (43) from -> FROM . expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> FROM . expression error expression DO FUNC NL statements END
    (45) from -> FROM . expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> FROM . expression TO expression DO error NL statements END
    (47) from -> FROM . expression TO expression error FUNC NL statements END
    (48) from -> FROM . expression TO expression WITH STEP expression error FUNC NL statements END
    (22) expression -> . var_const
    (23) expression -> . operation
    (24) expression -> . un_operation
    (25) expression -> . call_func
    (26) expression -> . commands
    (27) expression -> . logic_oper
    (28) var_const -> . variable
    (29) var_const -> . const
    (34) operation -> . expression PLUS expression
    (35) operation -> . expression MINUS expression
    (36) un_operation -> . MINUS expression
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (57) logic_oper -> . expression AND expression
    (58) logic_oper -> . expression OR expression
    (59) logic_oper -> . var_const COMP variable
    (60) logic_oper -> . variable
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    MINUS           shift and go to state 44
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    expression                     shift and go to state 36
    call_func                      shift and go to state 37
    var_const                      shift and go to state 38
    operation                      shift and go to state 39
    un_operation                   shift and go to state 40
    commands                       shift and go to state 41
    logic_oper                     shift and go to state 42
    variable                       shift and go to state 43
    const                          shift and go to state 16

state 14

    (49) call_func -> DO . STR

    STR             shift and go to state 45


state 15

    (61) function -> FUNC . STR NL statements END
    (62) function -> FUNC . STR error statements END

    STR             shift and go to state 46


state 16

    (29) var_const -> const .

    NL              reduce using rule 29 (var_const -> const .)
    EOE             reduce using rule 29 (var_const -> const .)
    COMP            reduce using rule 29 (var_const -> const .)
    TO              reduce using rule 29 (var_const -> const .)
    error           reduce using rule 29 (var_const -> const .)
    PLUS            reduce using rule 29 (var_const -> const .)
    MINUS           reduce using rule 29 (var_const -> const .)
    AND             reduce using rule 29 (var_const -> const .)
    OR              reduce using rule 29 (var_const -> const .)
    DO              reduce using rule 29 (var_const -> const .)
    WITH            reduce using rule 29 (var_const -> const .)


state 17

    (50) if -> IF . expression call_func
    (51) if -> IF . expression DO FUNC NL statements END
    (52) if -> IF . expression DO FUNC error statements END
    (53) if -> IF . expression DO error NL statements END
    (54) if -> IF . error DO FUNC NL statements END
    (55) if -> IF . error call_func
    (56) if -> IF . expression error FUNC NL statements END
    (22) expression -> . var_const
    (23) expression -> . operation
    (24) expression -> . un_operation
    (25) expression -> . call_func
    (26) expression -> . commands
    (27) expression -> . logic_oper
    (28) var_const -> . variable
    (29) var_const -> . const
    (34) operation -> . expression PLUS expression
    (35) operation -> . expression MINUS expression
    (36) un_operation -> . MINUS expression
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (57) logic_oper -> . expression AND expression
    (58) logic_oper -> . expression OR expression
    (59) logic_oper -> . var_const COMP variable
    (60) logic_oper -> . variable
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    error           shift and go to state 48
    MINUS           shift and go to state 44
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    expression                     shift and go to state 47
    call_func                      shift and go to state 37
    var_const                      shift and go to state 38
    operation                      shift and go to state 39
    un_operation                   shift and go to state 40
    commands                       shift and go to state 41
    logic_oper                     shift and go to state 42
    variable                       shift and go to state 43
    const                          shift and go to state 16

state 18

    (17) variable -> STR . index
    (18) variable -> STR . OPBR index CLBR
    (19) index -> .
    (20) index -> . index COMMA INT
    (21) index -> . INT

    OPBR            shift and go to state 50
    COMMA           reduce using rule 19 (index -> .)
    EQ              reduce using rule 19 (index -> .)
    NL              reduce using rule 19 (index -> .)
    EOE             reduce using rule 19 (index -> .)
    COMP            reduce using rule 19 (index -> .)
    TO              reduce using rule 19 (index -> .)
    error           reduce using rule 19 (index -> .)
    PLUS            reduce using rule 19 (index -> .)
    MINUS           reduce using rule 19 (index -> .)
    AND             reduce using rule 19 (index -> .)
    OR              reduce using rule 19 (index -> .)
    DO              reduce using rule 19 (index -> .)
    WITH            reduce using rule 19 (index -> .)
    INT             shift and go to state 51

    index                          shift and go to state 49

state 19

    (11) commands -> COMMAND . MOVE

    MOVE            shift and go to state 52


state 20

    (30) const -> INT .

    NL              reduce using rule 30 (const -> INT .)
    EOE             reduce using rule 30 (const -> INT .)
    COMP            reduce using rule 30 (const -> INT .)
    TO              reduce using rule 30 (const -> INT .)
    error           reduce using rule 30 (const -> INT .)
    PLUS            reduce using rule 30 (const -> INT .)
    MINUS           reduce using rule 30 (const -> INT .)
    AND             reduce using rule 30 (const -> INT .)
    OR              reduce using rule 30 (const -> INT .)
    DO              reduce using rule 30 (const -> INT .)
    WITH            reduce using rule 30 (const -> INT .)


state 21

    (31) const -> FLOAT .

    NL              reduce using rule 31 (const -> FLOAT .)
    EOE             reduce using rule 31 (const -> FLOAT .)
    COMP            reduce using rule 31 (const -> FLOAT .)
    TO              reduce using rule 31 (const -> FLOAT .)
    error           reduce using rule 31 (const -> FLOAT .)
    PLUS            reduce using rule 31 (const -> FLOAT .)
    MINUS           reduce using rule 31 (const -> FLOAT .)
    AND             reduce using rule 31 (const -> FLOAT .)
    OR              reduce using rule 31 (const -> FLOAT .)
    DO              reduce using rule 31 (const -> FLOAT .)
    WITH            reduce using rule 31 (const -> FLOAT .)


state 22

    (32) const -> LOGIC .

    NL              reduce using rule 32 (const -> LOGIC .)
    EOE             reduce using rule 32 (const -> LOGIC .)
    COMP            reduce using rule 32 (const -> LOGIC .)
    TO              reduce using rule 32 (const -> LOGIC .)
    error           reduce using rule 32 (const -> LOGIC .)
    PLUS            reduce using rule 32 (const -> LOGIC .)
    MINUS           reduce using rule 32 (const -> LOGIC .)
    AND             reduce using rule 32 (const -> LOGIC .)
    OR              reduce using rule 32 (const -> LOGIC .)
    DO              reduce using rule 32 (const -> LOGIC .)
    WITH            reduce using rule 32 (const -> LOGIC .)


state 23

    (33) const -> TCELL .

    NL              reduce using rule 33 (const -> TCELL .)
    EOE             reduce using rule 33 (const -> TCELL .)
    COMP            reduce using rule 33 (const -> TCELL .)
    TO              reduce using rule 33 (const -> TCELL .)
    error           reduce using rule 33 (const -> TCELL .)
    PLUS            reduce using rule 33 (const -> TCELL .)
    MINUS           reduce using rule 33 (const -> TCELL .)
    AND             reduce using rule 33 (const -> TCELL .)
    OR              reduce using rule 33 (const -> TCELL .)
    DO              reduce using rule 33 (const -> TCELL .)
    WITH            reduce using rule 33 (const -> TCELL .)


state 24

    (2) statements -> statements statement .

    FROM            reduce using rule 2 (statements -> statements statement .)
    IF              reduce using rule 2 (statements -> statements statement .)
    FUNC            reduce using rule 2 (statements -> statements statement .)
    error           reduce using rule 2 (statements -> statements statement .)
    DO              reduce using rule 2 (statements -> statements statement .)
    COMMAND         reduce using rule 2 (statements -> statements statement .)
    STR             reduce using rule 2 (statements -> statements statement .)
    INT             reduce using rule 2 (statements -> statements statement .)
    FLOAT           reduce using rule 2 (statements -> statements statement .)
    LOGIC           reduce using rule 2 (statements -> statements statement .)
    TCELL           reduce using rule 2 (statements -> statements statement .)
    $end            reduce using rule 2 (statements -> statements statement .)
    END             reduce using rule 2 (statements -> statements statement .)


state 25

    (4) statement -> assignment eoe .

    FROM            reduce using rule 4 (statement -> assignment eoe .)
    IF              reduce using rule 4 (statement -> assignment eoe .)
    FUNC            reduce using rule 4 (statement -> assignment eoe .)
    error           reduce using rule 4 (statement -> assignment eoe .)
    DO              reduce using rule 4 (statement -> assignment eoe .)
    COMMAND         reduce using rule 4 (statement -> assignment eoe .)
    STR             reduce using rule 4 (statement -> assignment eoe .)
    INT             reduce using rule 4 (statement -> assignment eoe .)
    FLOAT           reduce using rule 4 (statement -> assignment eoe .)
    LOGIC           reduce using rule 4 (statement -> assignment eoe .)
    TCELL           reduce using rule 4 (statement -> assignment eoe .)
    $end            reduce using rule 4 (statement -> assignment eoe .)
    END             reduce using rule 4 (statement -> assignment eoe .)


state 26

    (12) eoe -> NL .

    FROM            reduce using rule 12 (eoe -> NL .)
    IF              reduce using rule 12 (eoe -> NL .)
    FUNC            reduce using rule 12 (eoe -> NL .)
    error           reduce using rule 12 (eoe -> NL .)
    DO              reduce using rule 12 (eoe -> NL .)
    COMMAND         reduce using rule 12 (eoe -> NL .)
    STR             reduce using rule 12 (eoe -> NL .)
    INT             reduce using rule 12 (eoe -> NL .)
    FLOAT           reduce using rule 12 (eoe -> NL .)
    LOGIC           reduce using rule 12 (eoe -> NL .)
    TCELL           reduce using rule 12 (eoe -> NL .)
    $end            reduce using rule 12 (eoe -> NL .)
    END             reduce using rule 12 (eoe -> NL .)


state 27

    (13) eoe -> EOE .
    (14) eoe -> EOE . NL

    FROM            reduce using rule 13 (eoe -> EOE .)
    IF              reduce using rule 13 (eoe -> EOE .)
    FUNC            reduce using rule 13 (eoe -> EOE .)
    error           reduce using rule 13 (eoe -> EOE .)
    DO              reduce using rule 13 (eoe -> EOE .)
    COMMAND         reduce using rule 13 (eoe -> EOE .)
    STR             reduce using rule 13 (eoe -> EOE .)
    INT             reduce using rule 13 (eoe -> EOE .)
    FLOAT           reduce using rule 13 (eoe -> EOE .)
    LOGIC           reduce using rule 13 (eoe -> EOE .)
    TCELL           reduce using rule 13 (eoe -> EOE .)
    $end            reduce using rule 13 (eoe -> EOE .)
    END             reduce using rule 13 (eoe -> EOE .)
    NL              shift and go to state 53


state 28

    (5) statement -> from eoe .

    FROM            reduce using rule 5 (statement -> from eoe .)
    IF              reduce using rule 5 (statement -> from eoe .)
    FUNC            reduce using rule 5 (statement -> from eoe .)
    error           reduce using rule 5 (statement -> from eoe .)
    DO              reduce using rule 5 (statement -> from eoe .)
    COMMAND         reduce using rule 5 (statement -> from eoe .)
    STR             reduce using rule 5 (statement -> from eoe .)
    INT             reduce using rule 5 (statement -> from eoe .)
    FLOAT           reduce using rule 5 (statement -> from eoe .)
    LOGIC           reduce using rule 5 (statement -> from eoe .)
    TCELL           reduce using rule 5 (statement -> from eoe .)
    $end            reduce using rule 5 (statement -> from eoe .)
    END             reduce using rule 5 (statement -> from eoe .)


state 29

    (6) statement -> var_const eoe .

    FROM            reduce using rule 6 (statement -> var_const eoe .)
    IF              reduce using rule 6 (statement -> var_const eoe .)
    FUNC            reduce using rule 6 (statement -> var_const eoe .)
    error           reduce using rule 6 (statement -> var_const eoe .)
    DO              reduce using rule 6 (statement -> var_const eoe .)
    COMMAND         reduce using rule 6 (statement -> var_const eoe .)
    STR             reduce using rule 6 (statement -> var_const eoe .)
    INT             reduce using rule 6 (statement -> var_const eoe .)
    FLOAT           reduce using rule 6 (statement -> var_const eoe .)
    LOGIC           reduce using rule 6 (statement -> var_const eoe .)
    TCELL           reduce using rule 6 (statement -> var_const eoe .)
    $end            reduce using rule 6 (statement -> var_const eoe .)
    END             reduce using rule 6 (statement -> var_const eoe .)


state 30

    (7) statement -> if eoe .

    FROM            reduce using rule 7 (statement -> if eoe .)
    IF              reduce using rule 7 (statement -> if eoe .)
    FUNC            reduce using rule 7 (statement -> if eoe .)
    error           reduce using rule 7 (statement -> if eoe .)
    DO              reduce using rule 7 (statement -> if eoe .)
    COMMAND         reduce using rule 7 (statement -> if eoe .)
    STR             reduce using rule 7 (statement -> if eoe .)
    INT             reduce using rule 7 (statement -> if eoe .)
    FLOAT           reduce using rule 7 (statement -> if eoe .)
    LOGIC           reduce using rule 7 (statement -> if eoe .)
    TCELL           reduce using rule 7 (statement -> if eoe .)
    $end            reduce using rule 7 (statement -> if eoe .)
    END             reduce using rule 7 (statement -> if eoe .)


state 31

    (8) statement -> function eoe .

    FROM            reduce using rule 8 (statement -> function eoe .)
    IF              reduce using rule 8 (statement -> function eoe .)
    FUNC            reduce using rule 8 (statement -> function eoe .)
    error           reduce using rule 8 (statement -> function eoe .)
    DO              reduce using rule 8 (statement -> function eoe .)
    COMMAND         reduce using rule 8 (statement -> function eoe .)
    STR             reduce using rule 8 (statement -> function eoe .)
    INT             reduce using rule 8 (statement -> function eoe .)
    FLOAT           reduce using rule 8 (statement -> function eoe .)
    LOGIC           reduce using rule 8 (statement -> function eoe .)
    TCELL           reduce using rule 8 (statement -> function eoe .)
    $end            reduce using rule 8 (statement -> function eoe .)
    END             reduce using rule 8 (statement -> function eoe .)


state 32

    (9) statement -> call_func eoe .

    FROM            reduce using rule 9 (statement -> call_func eoe .)
    IF              reduce using rule 9 (statement -> call_func eoe .)
    FUNC            reduce using rule 9 (statement -> call_func eoe .)
    error           reduce using rule 9 (statement -> call_func eoe .)
    DO              reduce using rule 9 (statement -> call_func eoe .)
    COMMAND         reduce using rule 9 (statement -> call_func eoe .)
    STR             reduce using rule 9 (statement -> call_func eoe .)
    INT             reduce using rule 9 (statement -> call_func eoe .)
    FLOAT           reduce using rule 9 (statement -> call_func eoe .)
    LOGIC           reduce using rule 9 (statement -> call_func eoe .)
    TCELL           reduce using rule 9 (statement -> call_func eoe .)
    $end            reduce using rule 9 (statement -> call_func eoe .)
    END             reduce using rule 9 (statement -> call_func eoe .)


state 33

    (10) statement -> commands eoe .

    FROM            reduce using rule 10 (statement -> commands eoe .)
    IF              reduce using rule 10 (statement -> commands eoe .)
    FUNC            reduce using rule 10 (statement -> commands eoe .)
    error           reduce using rule 10 (statement -> commands eoe .)
    DO              reduce using rule 10 (statement -> commands eoe .)
    COMMAND         reduce using rule 10 (statement -> commands eoe .)
    STR             reduce using rule 10 (statement -> commands eoe .)
    INT             reduce using rule 10 (statement -> commands eoe .)
    FLOAT           reduce using rule 10 (statement -> commands eoe .)
    LOGIC           reduce using rule 10 (statement -> commands eoe .)
    TCELL           reduce using rule 10 (statement -> commands eoe .)
    $end            reduce using rule 10 (statement -> commands eoe .)
    END             reduce using rule 10 (statement -> commands eoe .)


state 34

    (15) assignment -> variable EQ . expression
    (16) assignment -> variable EQ . error
    (22) expression -> . var_const
    (23) expression -> . operation
    (24) expression -> . un_operation
    (25) expression -> . call_func
    (26) expression -> . commands
    (27) expression -> . logic_oper
    (28) var_const -> . variable
    (29) var_const -> . const
    (34) operation -> . expression PLUS expression
    (35) operation -> . expression MINUS expression
    (36) un_operation -> . MINUS expression
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (57) logic_oper -> . expression AND expression
    (58) logic_oper -> . expression OR expression
    (59) logic_oper -> . var_const COMP variable
    (60) logic_oper -> . variable
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    error           shift and go to state 55
    MINUS           shift and go to state 44
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    variable                       shift and go to state 43
    expression                     shift and go to state 54
    var_const                      shift and go to state 38
    operation                      shift and go to state 39
    un_operation                   shift and go to state 40
    call_func                      shift and go to state 37
    commands                       shift and go to state 41
    logic_oper                     shift and go to state 42
    const                          shift and go to state 16

state 35

    (63) function -> error STR . NL statements END

    NL              shift and go to state 56


state 36

    (37) from -> FROM expression . TO expression DO FUNC NL statements END
    (38) from -> FROM expression . TO expression call_func
    (39) from -> FROM expression . TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> FROM expression . TO expression WITH STEP expression call_func
    (41) from -> FROM expression . TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> FROM expression . TO expression DO FUNC error statements END
    (43) from -> FROM expression . error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> FROM expression . error expression DO FUNC NL statements END
    (45) from -> FROM expression . TO expression WITH STEP expression DO error NL statements END
    (46) from -> FROM expression . TO expression DO error NL statements END
    (47) from -> FROM expression . TO expression error FUNC NL statements END
    (48) from -> FROM expression . TO expression WITH STEP expression error FUNC NL statements END
    (34) operation -> expression . PLUS expression
    (35) operation -> expression . MINUS expression
    (57) logic_oper -> expression . AND expression
    (58) logic_oper -> expression . OR expression

    TO              shift and go to state 57
    error           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    AND             shift and go to state 61
    OR              shift and go to state 62


state 37

    (25) expression -> call_func .

    TO              reduce using rule 25 (expression -> call_func .)
    error           reduce using rule 25 (expression -> call_func .)
    PLUS            reduce using rule 25 (expression -> call_func .)
    MINUS           reduce using rule 25 (expression -> call_func .)
    AND             reduce using rule 25 (expression -> call_func .)
    OR              reduce using rule 25 (expression -> call_func .)
    DO              reduce using rule 25 (expression -> call_func .)
    NL              reduce using rule 25 (expression -> call_func .)
    EOE             reduce using rule 25 (expression -> call_func .)
    WITH            reduce using rule 25 (expression -> call_func .)


state 38

    (22) expression -> var_const .
    (59) logic_oper -> var_const . COMP variable

    TO              reduce using rule 22 (expression -> var_const .)
    error           reduce using rule 22 (expression -> var_const .)
    PLUS            reduce using rule 22 (expression -> var_const .)
    MINUS           reduce using rule 22 (expression -> var_const .)
    AND             reduce using rule 22 (expression -> var_const .)
    OR              reduce using rule 22 (expression -> var_const .)
    DO              reduce using rule 22 (expression -> var_const .)
    NL              reduce using rule 22 (expression -> var_const .)
    EOE             reduce using rule 22 (expression -> var_const .)
    WITH            reduce using rule 22 (expression -> var_const .)
    COMP            shift and go to state 63


state 39

    (23) expression -> operation .

    TO              reduce using rule 23 (expression -> operation .)
    error           reduce using rule 23 (expression -> operation .)
    PLUS            reduce using rule 23 (expression -> operation .)
    MINUS           reduce using rule 23 (expression -> operation .)
    AND             reduce using rule 23 (expression -> operation .)
    OR              reduce using rule 23 (expression -> operation .)
    DO              reduce using rule 23 (expression -> operation .)
    NL              reduce using rule 23 (expression -> operation .)
    EOE             reduce using rule 23 (expression -> operation .)
    WITH            reduce using rule 23 (expression -> operation .)


state 40

    (24) expression -> un_operation .

    TO              reduce using rule 24 (expression -> un_operation .)
    error           reduce using rule 24 (expression -> un_operation .)
    PLUS            reduce using rule 24 (expression -> un_operation .)
    MINUS           reduce using rule 24 (expression -> un_operation .)
    AND             reduce using rule 24 (expression -> un_operation .)
    OR              reduce using rule 24 (expression -> un_operation .)
    DO              reduce using rule 24 (expression -> un_operation .)
    NL              reduce using rule 24 (expression -> un_operation .)
    EOE             reduce using rule 24 (expression -> un_operation .)
    WITH            reduce using rule 24 (expression -> un_operation .)


state 41

    (26) expression -> commands .

    TO              reduce using rule 26 (expression -> commands .)
    error           reduce using rule 26 (expression -> commands .)
    PLUS            reduce using rule 26 (expression -> commands .)
    MINUS           reduce using rule 26 (expression -> commands .)
    AND             reduce using rule 26 (expression -> commands .)
    OR              reduce using rule 26 (expression -> commands .)
    DO              reduce using rule 26 (expression -> commands .)
    NL              reduce using rule 26 (expression -> commands .)
    EOE             reduce using rule 26 (expression -> commands .)
    WITH            reduce using rule 26 (expression -> commands .)


state 42

    (27) expression -> logic_oper .

    TO              reduce using rule 27 (expression -> logic_oper .)
    error           reduce using rule 27 (expression -> logic_oper .)
    PLUS            reduce using rule 27 (expression -> logic_oper .)
    MINUS           reduce using rule 27 (expression -> logic_oper .)
    AND             reduce using rule 27 (expression -> logic_oper .)
    OR              reduce using rule 27 (expression -> logic_oper .)
    DO              reduce using rule 27 (expression -> logic_oper .)
    NL              reduce using rule 27 (expression -> logic_oper .)
    EOE             reduce using rule 27 (expression -> logic_oper .)
    WITH            reduce using rule 27 (expression -> logic_oper .)


state 43

    (28) var_const -> variable .
    (60) logic_oper -> variable .

  ! reduce/reduce conflict for TO resolved using rule 28 (var_const -> variable .)
  ! reduce/reduce conflict for error resolved using rule 28 (var_const -> variable .)
  ! reduce/reduce conflict for PLUS resolved using rule 28 (var_const -> variable .)
  ! reduce/reduce conflict for MINUS resolved using rule 28 (var_const -> variable .)
  ! reduce/reduce conflict for AND resolved using rule 28 (var_const -> variable .)
  ! reduce/reduce conflict for OR resolved using rule 28 (var_const -> variable .)
  ! reduce/reduce conflict for DO resolved using rule 28 (var_const -> variable .)
  ! reduce/reduce conflict for NL resolved using rule 28 (var_const -> variable .)
  ! reduce/reduce conflict for EOE resolved using rule 28 (var_const -> variable .)
  ! reduce/reduce conflict for WITH resolved using rule 28 (var_const -> variable .)
    COMP            reduce using rule 28 (var_const -> variable .)
    TO              reduce using rule 28 (var_const -> variable .)
    error           reduce using rule 28 (var_const -> variable .)
    PLUS            reduce using rule 28 (var_const -> variable .)
    MINUS           reduce using rule 28 (var_const -> variable .)
    AND             reduce using rule 28 (var_const -> variable .)
    OR              reduce using rule 28 (var_const -> variable .)
    DO              reduce using rule 28 (var_const -> variable .)
    NL              reduce using rule 28 (var_const -> variable .)
    EOE             reduce using rule 28 (var_const -> variable .)
    WITH            reduce using rule 28 (var_const -> variable .)

  ! TO              [ reduce using rule 60 (logic_oper -> variable .) ]
  ! error           [ reduce using rule 60 (logic_oper -> variable .) ]
  ! PLUS            [ reduce using rule 60 (logic_oper -> variable .) ]
  ! MINUS           [ reduce using rule 60 (logic_oper -> variable .) ]
  ! AND             [ reduce using rule 60 (logic_oper -> variable .) ]
  ! OR              [ reduce using rule 60 (logic_oper -> variable .) ]
  ! DO              [ reduce using rule 60 (logic_oper -> variable .) ]
  ! NL              [ reduce using rule 60 (logic_oper -> variable .) ]
  ! EOE             [ reduce using rule 60 (logic_oper -> variable .) ]
  ! WITH            [ reduce using rule 60 (logic_oper -> variable .) ]


state 44

    (36) un_operation -> MINUS . expression
    (22) expression -> . var_const
    (23) expression -> . operation
    (24) expression -> . un_operation
    (25) expression -> . call_func
    (26) expression -> . commands
    (27) expression -> . logic_oper
    (28) var_const -> . variable
    (29) var_const -> . const
    (34) operation -> . expression PLUS expression
    (35) operation -> . expression MINUS expression
    (36) un_operation -> . MINUS expression
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (57) logic_oper -> . expression AND expression
    (58) logic_oper -> . expression OR expression
    (59) logic_oper -> . var_const COMP variable
    (60) logic_oper -> . variable
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    MINUS           shift and go to state 44
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    expression                     shift and go to state 64
    var_const                      shift and go to state 38
    operation                      shift and go to state 39
    un_operation                   shift and go to state 40
    call_func                      shift and go to state 37
    commands                       shift and go to state 41
    logic_oper                     shift and go to state 42
    variable                       shift and go to state 43
    const                          shift and go to state 16

state 45

    (49) call_func -> DO STR .

    NL              reduce using rule 49 (call_func -> DO STR .)
    EOE             reduce using rule 49 (call_func -> DO STR .)
    TO              reduce using rule 49 (call_func -> DO STR .)
    error           reduce using rule 49 (call_func -> DO STR .)
    PLUS            reduce using rule 49 (call_func -> DO STR .)
    MINUS           reduce using rule 49 (call_func -> DO STR .)
    AND             reduce using rule 49 (call_func -> DO STR .)
    OR              reduce using rule 49 (call_func -> DO STR .)
    DO              reduce using rule 49 (call_func -> DO STR .)
    WITH            reduce using rule 49 (call_func -> DO STR .)


state 46

    (61) function -> FUNC STR . NL statements END
    (62) function -> FUNC STR . error statements END

    NL              shift and go to state 65
    error           shift and go to state 66


state 47

    (50) if -> IF expression . call_func
    (51) if -> IF expression . DO FUNC NL statements END
    (52) if -> IF expression . DO FUNC error statements END
    (53) if -> IF expression . DO error NL statements END
    (56) if -> IF expression . error FUNC NL statements END
    (34) operation -> expression . PLUS expression
    (35) operation -> expression . MINUS expression
    (57) logic_oper -> expression . AND expression
    (58) logic_oper -> expression . OR expression
    (49) call_func -> . DO STR

    DO              shift and go to state 68
    error           shift and go to state 69
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    AND             shift and go to state 61
    OR              shift and go to state 62

    call_func                      shift and go to state 67

state 48

    (54) if -> IF error . DO FUNC NL statements END
    (55) if -> IF error . call_func
    (49) call_func -> . DO STR

    DO              shift and go to state 70

    call_func                      shift and go to state 71

state 49

    (17) variable -> STR index .
    (20) index -> index . COMMA INT

    EQ              reduce using rule 17 (variable -> STR index .)
    NL              reduce using rule 17 (variable -> STR index .)
    EOE             reduce using rule 17 (variable -> STR index .)
    COMP            reduce using rule 17 (variable -> STR index .)
    TO              reduce using rule 17 (variable -> STR index .)
    error           reduce using rule 17 (variable -> STR index .)
    PLUS            reduce using rule 17 (variable -> STR index .)
    MINUS           reduce using rule 17 (variable -> STR index .)
    AND             reduce using rule 17 (variable -> STR index .)
    OR              reduce using rule 17 (variable -> STR index .)
    DO              reduce using rule 17 (variable -> STR index .)
    WITH            reduce using rule 17 (variable -> STR index .)
    COMMA           shift and go to state 72


state 50

    (18) variable -> STR OPBR . index CLBR
    (19) index -> .
    (20) index -> . index COMMA INT
    (21) index -> . INT

    CLBR            reduce using rule 19 (index -> .)
    COMMA           reduce using rule 19 (index -> .)
    INT             shift and go to state 51

    index                          shift and go to state 73

state 51

    (21) index -> INT .

    COMMA           reduce using rule 21 (index -> INT .)
    EQ              reduce using rule 21 (index -> INT .)
    NL              reduce using rule 21 (index -> INT .)
    EOE             reduce using rule 21 (index -> INT .)
    COMP            reduce using rule 21 (index -> INT .)
    TO              reduce using rule 21 (index -> INT .)
    error           reduce using rule 21 (index -> INT .)
    PLUS            reduce using rule 21 (index -> INT .)
    MINUS           reduce using rule 21 (index -> INT .)
    AND             reduce using rule 21 (index -> INT .)
    OR              reduce using rule 21 (index -> INT .)
    DO              reduce using rule 21 (index -> INT .)
    WITH            reduce using rule 21 (index -> INT .)
    CLBR            reduce using rule 21 (index -> INT .)


state 52

    (11) commands -> COMMAND MOVE .

    NL              reduce using rule 11 (commands -> COMMAND MOVE .)
    EOE             reduce using rule 11 (commands -> COMMAND MOVE .)
    TO              reduce using rule 11 (commands -> COMMAND MOVE .)
    error           reduce using rule 11 (commands -> COMMAND MOVE .)
    PLUS            reduce using rule 11 (commands -> COMMAND MOVE .)
    MINUS           reduce using rule 11 (commands -> COMMAND MOVE .)
    AND             reduce using rule 11 (commands -> COMMAND MOVE .)
    OR              reduce using rule 11 (commands -> COMMAND MOVE .)
    DO              reduce using rule 11 (commands -> COMMAND MOVE .)
    WITH            reduce using rule 11 (commands -> COMMAND MOVE .)


state 53

    (14) eoe -> EOE NL .

    FROM            reduce using rule 14 (eoe -> EOE NL .)
    IF              reduce using rule 14 (eoe -> EOE NL .)
    FUNC            reduce using rule 14 (eoe -> EOE NL .)
    error           reduce using rule 14 (eoe -> EOE NL .)
    DO              reduce using rule 14 (eoe -> EOE NL .)
    COMMAND         reduce using rule 14 (eoe -> EOE NL .)
    STR             reduce using rule 14 (eoe -> EOE NL .)
    INT             reduce using rule 14 (eoe -> EOE NL .)
    FLOAT           reduce using rule 14 (eoe -> EOE NL .)
    LOGIC           reduce using rule 14 (eoe -> EOE NL .)
    TCELL           reduce using rule 14 (eoe -> EOE NL .)
    $end            reduce using rule 14 (eoe -> EOE NL .)
    END             reduce using rule 14 (eoe -> EOE NL .)


state 54

    (15) assignment -> variable EQ expression .
    (34) operation -> expression . PLUS expression
    (35) operation -> expression . MINUS expression
    (57) logic_oper -> expression . AND expression
    (58) logic_oper -> expression . OR expression

    NL              reduce using rule 15 (assignment -> variable EQ expression .)
    EOE             reduce using rule 15 (assignment -> variable EQ expression .)
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    AND             shift and go to state 61
    OR              shift and go to state 62


state 55

    (16) assignment -> variable EQ error .

    NL              reduce using rule 16 (assignment -> variable EQ error .)
    EOE             reduce using rule 16 (assignment -> variable EQ error .)


state 56

    (63) function -> error STR NL . statements END
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statements                     shift and go to state 74
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 57

    (37) from -> FROM expression TO . expression DO FUNC NL statements END
    (38) from -> FROM expression TO . expression call_func
    (39) from -> FROM expression TO . expression WITH STEP expression DO FUNC NL statements END
    (40) from -> FROM expression TO . expression WITH STEP expression call_func
    (41) from -> FROM expression TO . expression WITH STEP expression DO FUNC error statements END
    (42) from -> FROM expression TO . expression DO FUNC error statements END
    (45) from -> FROM expression TO . expression WITH STEP expression DO error NL statements END
    (46) from -> FROM expression TO . expression DO error NL statements END
    (47) from -> FROM expression TO . expression error FUNC NL statements END
    (48) from -> FROM expression TO . expression WITH STEP expression error FUNC NL statements END
    (22) expression -> . var_const
    (23) expression -> . operation
    (24) expression -> . un_operation
    (25) expression -> . call_func
    (26) expression -> . commands
    (27) expression -> . logic_oper
    (28) var_const -> . variable
    (29) var_const -> . const
    (34) operation -> . expression PLUS expression
    (35) operation -> . expression MINUS expression
    (36) un_operation -> . MINUS expression
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (57) logic_oper -> . expression AND expression
    (58) logic_oper -> . expression OR expression
    (59) logic_oper -> . var_const COMP variable
    (60) logic_oper -> . variable
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    MINUS           shift and go to state 44
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    expression                     shift and go to state 75
    call_func                      shift and go to state 37
    var_const                      shift and go to state 38
    operation                      shift and go to state 39
    un_operation                   shift and go to state 40
    commands                       shift and go to state 41
    logic_oper                     shift and go to state 42
    variable                       shift and go to state 43
    const                          shift and go to state 16

state 58

    (43) from -> FROM expression error . expression WITH STEP expression DO FUNC NL statements END
    (44) from -> FROM expression error . expression DO FUNC NL statements END
    (22) expression -> . var_const
    (23) expression -> . operation
    (24) expression -> . un_operation
    (25) expression -> . call_func
    (26) expression -> . commands
    (27) expression -> . logic_oper
    (28) var_const -> . variable
    (29) var_const -> . const
    (34) operation -> . expression PLUS expression
    (35) operation -> . expression MINUS expression
    (36) un_operation -> . MINUS expression
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (57) logic_oper -> . expression AND expression
    (58) logic_oper -> . expression OR expression
    (59) logic_oper -> . var_const COMP variable
    (60) logic_oper -> . variable
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    MINUS           shift and go to state 44
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    expression                     shift and go to state 76
    var_const                      shift and go to state 38
    operation                      shift and go to state 39
    un_operation                   shift and go to state 40
    call_func                      shift and go to state 37
    commands                       shift and go to state 41
    logic_oper                     shift and go to state 42
    variable                       shift and go to state 43
    const                          shift and go to state 16

state 59

    (34) operation -> expression PLUS . expression
    (22) expression -> . var_const
    (23) expression -> . operation
    (24) expression -> . un_operation
    (25) expression -> . call_func
    (26) expression -> . commands
    (27) expression -> . logic_oper
    (28) var_const -> . variable
    (29) var_const -> . const
    (34) operation -> . expression PLUS expression
    (35) operation -> . expression MINUS expression
    (36) un_operation -> . MINUS expression
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (57) logic_oper -> . expression AND expression
    (58) logic_oper -> . expression OR expression
    (59) logic_oper -> . var_const COMP variable
    (60) logic_oper -> . variable
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    MINUS           shift and go to state 44
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    expression                     shift and go to state 77
    var_const                      shift and go to state 38
    operation                      shift and go to state 39
    un_operation                   shift and go to state 40
    call_func                      shift and go to state 37
    commands                       shift and go to state 41
    logic_oper                     shift and go to state 42
    variable                       shift and go to state 43
    const                          shift and go to state 16

state 60

    (35) operation -> expression MINUS . expression
    (22) expression -> . var_const
    (23) expression -> . operation
    (24) expression -> . un_operation
    (25) expression -> . call_func
    (26) expression -> . commands
    (27) expression -> . logic_oper
    (28) var_const -> . variable
    (29) var_const -> . const
    (34) operation -> . expression PLUS expression
    (35) operation -> . expression MINUS expression
    (36) un_operation -> . MINUS expression
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (57) logic_oper -> . expression AND expression
    (58) logic_oper -> . expression OR expression
    (59) logic_oper -> . var_const COMP variable
    (60) logic_oper -> . variable
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    MINUS           shift and go to state 44
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    expression                     shift and go to state 78
    var_const                      shift and go to state 38
    operation                      shift and go to state 39
    un_operation                   shift and go to state 40
    call_func                      shift and go to state 37
    commands                       shift and go to state 41
    logic_oper                     shift and go to state 42
    variable                       shift and go to state 43
    const                          shift and go to state 16

state 61

    (57) logic_oper -> expression AND . expression
    (22) expression -> . var_const
    (23) expression -> . operation
    (24) expression -> . un_operation
    (25) expression -> . call_func
    (26) expression -> . commands
    (27) expression -> . logic_oper
    (28) var_const -> . variable
    (29) var_const -> . const
    (34) operation -> . expression PLUS expression
    (35) operation -> . expression MINUS expression
    (36) un_operation -> . MINUS expression
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (57) logic_oper -> . expression AND expression
    (58) logic_oper -> . expression OR expression
    (59) logic_oper -> . var_const COMP variable
    (60) logic_oper -> . variable
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    MINUS           shift and go to state 44
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    expression                     shift and go to state 79
    var_const                      shift and go to state 38
    operation                      shift and go to state 39
    un_operation                   shift and go to state 40
    call_func                      shift and go to state 37
    commands                       shift and go to state 41
    logic_oper                     shift and go to state 42
    variable                       shift and go to state 43
    const                          shift and go to state 16

state 62

    (58) logic_oper -> expression OR . expression
    (22) expression -> . var_const
    (23) expression -> . operation
    (24) expression -> . un_operation
    (25) expression -> . call_func
    (26) expression -> . commands
    (27) expression -> . logic_oper
    (28) var_const -> . variable
    (29) var_const -> . const
    (34) operation -> . expression PLUS expression
    (35) operation -> . expression MINUS expression
    (36) un_operation -> . MINUS expression
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (57) logic_oper -> . expression AND expression
    (58) logic_oper -> . expression OR expression
    (59) logic_oper -> . var_const COMP variable
    (60) logic_oper -> . variable
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    MINUS           shift and go to state 44
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    expression                     shift and go to state 80
    var_const                      shift and go to state 38
    operation                      shift and go to state 39
    un_operation                   shift and go to state 40
    call_func                      shift and go to state 37
    commands                       shift and go to state 41
    logic_oper                     shift and go to state 42
    variable                       shift and go to state 43
    const                          shift and go to state 16

state 63

    (59) logic_oper -> var_const COMP . variable
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR

    STR             shift and go to state 18

    variable                       shift and go to state 81

state 64

    (36) un_operation -> MINUS expression .
    (34) operation -> expression . PLUS expression
    (35) operation -> expression . MINUS expression
    (57) logic_oper -> expression . AND expression
    (58) logic_oper -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    TO              reduce using rule 36 (un_operation -> MINUS expression .)
    error           reduce using rule 36 (un_operation -> MINUS expression .)
    DO              reduce using rule 36 (un_operation -> MINUS expression .)
    NL              reduce using rule 36 (un_operation -> MINUS expression .)
    EOE             reduce using rule 36 (un_operation -> MINUS expression .)
    WITH            reduce using rule 36 (un_operation -> MINUS expression .)
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    AND             shift and go to state 61
    OR              shift and go to state 62

  ! PLUS            [ reduce using rule 36 (un_operation -> MINUS expression .) ]
  ! MINUS           [ reduce using rule 36 (un_operation -> MINUS expression .) ]
  ! AND             [ reduce using rule 36 (un_operation -> MINUS expression .) ]
  ! OR              [ reduce using rule 36 (un_operation -> MINUS expression .) ]


state 65

    (61) function -> FUNC STR NL . statements END
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statements                     shift and go to state 82
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 66

    (62) function -> FUNC STR error . statements END
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statements                     shift and go to state 83
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 67

    (50) if -> IF expression call_func .

    NL              reduce using rule 50 (if -> IF expression call_func .)
    EOE             reduce using rule 50 (if -> IF expression call_func .)


state 68

    (51) if -> IF expression DO . FUNC NL statements END
    (52) if -> IF expression DO . FUNC error statements END
    (53) if -> IF expression DO . error NL statements END
    (49) call_func -> DO . STR

    FUNC            shift and go to state 84
    error           shift and go to state 85
    STR             shift and go to state 45


state 69

    (56) if -> IF expression error . FUNC NL statements END

    FUNC            shift and go to state 86


state 70

    (54) if -> IF error DO . FUNC NL statements END
    (49) call_func -> DO . STR

    FUNC            shift and go to state 87
    STR             shift and go to state 45


state 71

    (55) if -> IF error call_func .

    NL              reduce using rule 55 (if -> IF error call_func .)
    EOE             reduce using rule 55 (if -> IF error call_func .)


state 72

    (20) index -> index COMMA . INT

    INT             shift and go to state 88


state 73

    (18) variable -> STR OPBR index . CLBR
    (20) index -> index . COMMA INT

    CLBR            shift and go to state 89
    COMMA           shift and go to state 72


state 74

    (63) function -> error STR NL statements . END
    (2) statements -> statements . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    END             shift and go to state 90
    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statement                      shift and go to state 24
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 75

    (37) from -> FROM expression TO expression . DO FUNC NL statements END
    (38) from -> FROM expression TO expression . call_func
    (39) from -> FROM expression TO expression . WITH STEP expression DO FUNC NL statements END
    (40) from -> FROM expression TO expression . WITH STEP expression call_func
    (41) from -> FROM expression TO expression . WITH STEP expression DO FUNC error statements END
    (42) from -> FROM expression TO expression . DO FUNC error statements END
    (45) from -> FROM expression TO expression . WITH STEP expression DO error NL statements END
    (46) from -> FROM expression TO expression . DO error NL statements END
    (47) from -> FROM expression TO expression . error FUNC NL statements END
    (48) from -> FROM expression TO expression . WITH STEP expression error FUNC NL statements END
    (34) operation -> expression . PLUS expression
    (35) operation -> expression . MINUS expression
    (57) logic_oper -> expression . AND expression
    (58) logic_oper -> expression . OR expression
    (49) call_func -> . DO STR

    DO              shift and go to state 91
    WITH            shift and go to state 93
    error           shift and go to state 94
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    AND             shift and go to state 61
    OR              shift and go to state 62

    call_func                      shift and go to state 92

state 76

    (43) from -> FROM expression error expression . WITH STEP expression DO FUNC NL statements END
    (44) from -> FROM expression error expression . DO FUNC NL statements END
    (34) operation -> expression . PLUS expression
    (35) operation -> expression . MINUS expression
    (57) logic_oper -> expression . AND expression
    (58) logic_oper -> expression . OR expression

    WITH            shift and go to state 95
    DO              shift and go to state 96
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    AND             shift and go to state 61
    OR              shift and go to state 62


state 77

    (34) operation -> expression PLUS expression .
    (34) operation -> expression . PLUS expression
    (35) operation -> expression . MINUS expression
    (57) logic_oper -> expression . AND expression
    (58) logic_oper -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    TO              reduce using rule 34 (operation -> expression PLUS expression .)
    error           reduce using rule 34 (operation -> expression PLUS expression .)
    DO              reduce using rule 34 (operation -> expression PLUS expression .)
    NL              reduce using rule 34 (operation -> expression PLUS expression .)
    EOE             reduce using rule 34 (operation -> expression PLUS expression .)
    WITH            reduce using rule 34 (operation -> expression PLUS expression .)
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    AND             shift and go to state 61
    OR              shift and go to state 62

  ! PLUS            [ reduce using rule 34 (operation -> expression PLUS expression .) ]
  ! MINUS           [ reduce using rule 34 (operation -> expression PLUS expression .) ]
  ! AND             [ reduce using rule 34 (operation -> expression PLUS expression .) ]
  ! OR              [ reduce using rule 34 (operation -> expression PLUS expression .) ]


state 78

    (35) operation -> expression MINUS expression .
    (34) operation -> expression . PLUS expression
    (35) operation -> expression . MINUS expression
    (57) logic_oper -> expression . AND expression
    (58) logic_oper -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    TO              reduce using rule 35 (operation -> expression MINUS expression .)
    error           reduce using rule 35 (operation -> expression MINUS expression .)
    DO              reduce using rule 35 (operation -> expression MINUS expression .)
    NL              reduce using rule 35 (operation -> expression MINUS expression .)
    EOE             reduce using rule 35 (operation -> expression MINUS expression .)
    WITH            reduce using rule 35 (operation -> expression MINUS expression .)
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    AND             shift and go to state 61
    OR              shift and go to state 62

  ! PLUS            [ reduce using rule 35 (operation -> expression MINUS expression .) ]
  ! MINUS           [ reduce using rule 35 (operation -> expression MINUS expression .) ]
  ! AND             [ reduce using rule 35 (operation -> expression MINUS expression .) ]
  ! OR              [ reduce using rule 35 (operation -> expression MINUS expression .) ]


state 79

    (57) logic_oper -> expression AND expression .
    (34) operation -> expression . PLUS expression
    (35) operation -> expression . MINUS expression
    (57) logic_oper -> expression . AND expression
    (58) logic_oper -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    TO              reduce using rule 57 (logic_oper -> expression AND expression .)
    error           reduce using rule 57 (logic_oper -> expression AND expression .)
    DO              reduce using rule 57 (logic_oper -> expression AND expression .)
    NL              reduce using rule 57 (logic_oper -> expression AND expression .)
    EOE             reduce using rule 57 (logic_oper -> expression AND expression .)
    WITH            reduce using rule 57 (logic_oper -> expression AND expression .)
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    AND             shift and go to state 61
    OR              shift and go to state 62

  ! PLUS            [ reduce using rule 57 (logic_oper -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 57 (logic_oper -> expression AND expression .) ]
  ! AND             [ reduce using rule 57 (logic_oper -> expression AND expression .) ]
  ! OR              [ reduce using rule 57 (logic_oper -> expression AND expression .) ]


state 80

    (58) logic_oper -> expression OR expression .
    (34) operation -> expression . PLUS expression
    (35) operation -> expression . MINUS expression
    (57) logic_oper -> expression . AND expression
    (58) logic_oper -> expression . OR expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    TO              reduce using rule 58 (logic_oper -> expression OR expression .)
    error           reduce using rule 58 (logic_oper -> expression OR expression .)
    DO              reduce using rule 58 (logic_oper -> expression OR expression .)
    NL              reduce using rule 58 (logic_oper -> expression OR expression .)
    EOE             reduce using rule 58 (logic_oper -> expression OR expression .)
    WITH            reduce using rule 58 (logic_oper -> expression OR expression .)
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    AND             shift and go to state 61
    OR              shift and go to state 62

  ! PLUS            [ reduce using rule 58 (logic_oper -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 58 (logic_oper -> expression OR expression .) ]
  ! AND             [ reduce using rule 58 (logic_oper -> expression OR expression .) ]
  ! OR              [ reduce using rule 58 (logic_oper -> expression OR expression .) ]


state 81

    (59) logic_oper -> var_const COMP variable .

    TO              reduce using rule 59 (logic_oper -> var_const COMP variable .)
    error           reduce using rule 59 (logic_oper -> var_const COMP variable .)
    PLUS            reduce using rule 59 (logic_oper -> var_const COMP variable .)
    MINUS           reduce using rule 59 (logic_oper -> var_const COMP variable .)
    AND             reduce using rule 59 (logic_oper -> var_const COMP variable .)
    OR              reduce using rule 59 (logic_oper -> var_const COMP variable .)
    DO              reduce using rule 59 (logic_oper -> var_const COMP variable .)
    NL              reduce using rule 59 (logic_oper -> var_const COMP variable .)
    EOE             reduce using rule 59 (logic_oper -> var_const COMP variable .)
    WITH            reduce using rule 59 (logic_oper -> var_const COMP variable .)


state 82

    (61) function -> FUNC STR NL statements . END
    (2) statements -> statements . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    END             shift and go to state 97
    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statement                      shift and go to state 24
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 83

    (62) function -> FUNC STR error statements . END
    (2) statements -> statements . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    END             shift and go to state 98
    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statement                      shift and go to state 24
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 84

    (51) if -> IF expression DO FUNC . NL statements END
    (52) if -> IF expression DO FUNC . error statements END

    NL              shift and go to state 99
    error           shift and go to state 100


state 85

    (53) if -> IF expression DO error . NL statements END

    NL              shift and go to state 101


state 86

    (56) if -> IF expression error FUNC . NL statements END

    NL              shift and go to state 102


state 87

    (54) if -> IF error DO FUNC . NL statements END

    NL              shift and go to state 103


state 88

    (20) index -> index COMMA INT .

    COMMA           reduce using rule 20 (index -> index COMMA INT .)
    EQ              reduce using rule 20 (index -> index COMMA INT .)
    NL              reduce using rule 20 (index -> index COMMA INT .)
    EOE             reduce using rule 20 (index -> index COMMA INT .)
    COMP            reduce using rule 20 (index -> index COMMA INT .)
    TO              reduce using rule 20 (index -> index COMMA INT .)
    error           reduce using rule 20 (index -> index COMMA INT .)
    PLUS            reduce using rule 20 (index -> index COMMA INT .)
    MINUS           reduce using rule 20 (index -> index COMMA INT .)
    AND             reduce using rule 20 (index -> index COMMA INT .)
    OR              reduce using rule 20 (index -> index COMMA INT .)
    DO              reduce using rule 20 (index -> index COMMA INT .)
    WITH            reduce using rule 20 (index -> index COMMA INT .)
    CLBR            reduce using rule 20 (index -> index COMMA INT .)


state 89

    (18) variable -> STR OPBR index CLBR .

    EQ              reduce using rule 18 (variable -> STR OPBR index CLBR .)
    NL              reduce using rule 18 (variable -> STR OPBR index CLBR .)
    EOE             reduce using rule 18 (variable -> STR OPBR index CLBR .)
    COMP            reduce using rule 18 (variable -> STR OPBR index CLBR .)
    TO              reduce using rule 18 (variable -> STR OPBR index CLBR .)
    error           reduce using rule 18 (variable -> STR OPBR index CLBR .)
    PLUS            reduce using rule 18 (variable -> STR OPBR index CLBR .)
    MINUS           reduce using rule 18 (variable -> STR OPBR index CLBR .)
    AND             reduce using rule 18 (variable -> STR OPBR index CLBR .)
    OR              reduce using rule 18 (variable -> STR OPBR index CLBR .)
    DO              reduce using rule 18 (variable -> STR OPBR index CLBR .)
    WITH            reduce using rule 18 (variable -> STR OPBR index CLBR .)


state 90

    (63) function -> error STR NL statements END .

    NL              reduce using rule 63 (function -> error STR NL statements END .)
    EOE             reduce using rule 63 (function -> error STR NL statements END .)


state 91

    (37) from -> FROM expression TO expression DO . FUNC NL statements END
    (42) from -> FROM expression TO expression DO . FUNC error statements END
    (46) from -> FROM expression TO expression DO . error NL statements END
    (49) call_func -> DO . STR

    FUNC            shift and go to state 104
    error           shift and go to state 105
    STR             shift and go to state 45


state 92

    (38) from -> FROM expression TO expression call_func .

    NL              reduce using rule 38 (from -> FROM expression TO expression call_func .)
    EOE             reduce using rule 38 (from -> FROM expression TO expression call_func .)


state 93

    (39) from -> FROM expression TO expression WITH . STEP expression DO FUNC NL statements END
    (40) from -> FROM expression TO expression WITH . STEP expression call_func
    (41) from -> FROM expression TO expression WITH . STEP expression DO FUNC error statements END
    (45) from -> FROM expression TO expression WITH . STEP expression DO error NL statements END
    (48) from -> FROM expression TO expression WITH . STEP expression error FUNC NL statements END

    STEP            shift and go to state 106


state 94

    (47) from -> FROM expression TO expression error . FUNC NL statements END

    FUNC            shift and go to state 107


state 95

    (43) from -> FROM expression error expression WITH . STEP expression DO FUNC NL statements END

    STEP            shift and go to state 108


state 96

    (44) from -> FROM expression error expression DO . FUNC NL statements END

    FUNC            shift and go to state 109


state 97

    (61) function -> FUNC STR NL statements END .

    NL              reduce using rule 61 (function -> FUNC STR NL statements END .)
    EOE             reduce using rule 61 (function -> FUNC STR NL statements END .)


state 98

    (62) function -> FUNC STR error statements END .

    NL              reduce using rule 62 (function -> FUNC STR error statements END .)
    EOE             reduce using rule 62 (function -> FUNC STR error statements END .)


state 99

    (51) if -> IF expression DO FUNC NL . statements END
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statements                     shift and go to state 110
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 100

    (52) if -> IF expression DO FUNC error . statements END
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statements                     shift and go to state 111
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 101

    (53) if -> IF expression DO error NL . statements END
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statements                     shift and go to state 112
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 102

    (56) if -> IF expression error FUNC NL . statements END
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statements                     shift and go to state 113
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 103

    (54) if -> IF error DO FUNC NL . statements END
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statements                     shift and go to state 114
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 104

    (37) from -> FROM expression TO expression DO FUNC . NL statements END
    (42) from -> FROM expression TO expression DO FUNC . error statements END

    NL              shift and go to state 115
    error           shift and go to state 116


state 105

    (46) from -> FROM expression TO expression DO error . NL statements END

    NL              shift and go to state 117


state 106

    (39) from -> FROM expression TO expression WITH STEP . expression DO FUNC NL statements END
    (40) from -> FROM expression TO expression WITH STEP . expression call_func
    (41) from -> FROM expression TO expression WITH STEP . expression DO FUNC error statements END
    (45) from -> FROM expression TO expression WITH STEP . expression DO error NL statements END
    (48) from -> FROM expression TO expression WITH STEP . expression error FUNC NL statements END
    (22) expression -> . var_const
    (23) expression -> . operation
    (24) expression -> . un_operation
    (25) expression -> . call_func
    (26) expression -> . commands
    (27) expression -> . logic_oper
    (28) var_const -> . variable
    (29) var_const -> . const
    (34) operation -> . expression PLUS expression
    (35) operation -> . expression MINUS expression
    (36) un_operation -> . MINUS expression
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (57) logic_oper -> . expression AND expression
    (58) logic_oper -> . expression OR expression
    (59) logic_oper -> . var_const COMP variable
    (60) logic_oper -> . variable
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    MINUS           shift and go to state 44
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    expression                     shift and go to state 118
    call_func                      shift and go to state 37
    var_const                      shift and go to state 38
    operation                      shift and go to state 39
    un_operation                   shift and go to state 40
    commands                       shift and go to state 41
    logic_oper                     shift and go to state 42
    variable                       shift and go to state 43
    const                          shift and go to state 16

state 107

    (47) from -> FROM expression TO expression error FUNC . NL statements END

    NL              shift and go to state 119


state 108

    (43) from -> FROM expression error expression WITH STEP . expression DO FUNC NL statements END
    (22) expression -> . var_const
    (23) expression -> . operation
    (24) expression -> . un_operation
    (25) expression -> . call_func
    (26) expression -> . commands
    (27) expression -> . logic_oper
    (28) var_const -> . variable
    (29) var_const -> . const
    (34) operation -> . expression PLUS expression
    (35) operation -> . expression MINUS expression
    (36) un_operation -> . MINUS expression
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (57) logic_oper -> . expression AND expression
    (58) logic_oper -> . expression OR expression
    (59) logic_oper -> . var_const COMP variable
    (60) logic_oper -> . variable
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    MINUS           shift and go to state 44
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    expression                     shift and go to state 120
    var_const                      shift and go to state 38
    operation                      shift and go to state 39
    un_operation                   shift and go to state 40
    call_func                      shift and go to state 37
    commands                       shift and go to state 41
    logic_oper                     shift and go to state 42
    variable                       shift and go to state 43
    const                          shift and go to state 16

state 109

    (44) from -> FROM expression error expression DO FUNC . NL statements END

    NL              shift and go to state 121


state 110

    (51) if -> IF expression DO FUNC NL statements . END
    (2) statements -> statements . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    END             shift and go to state 122
    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statement                      shift and go to state 24
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 111

    (52) if -> IF expression DO FUNC error statements . END
    (2) statements -> statements . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    END             shift and go to state 123
    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statement                      shift and go to state 24
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 112

    (53) if -> IF expression DO error NL statements . END
    (2) statements -> statements . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    END             shift and go to state 124
    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statement                      shift and go to state 24
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 113

    (56) if -> IF expression error FUNC NL statements . END
    (2) statements -> statements . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    END             shift and go to state 125
    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statement                      shift and go to state 24
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 114

    (54) if -> IF error DO FUNC NL statements . END
    (2) statements -> statements . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    END             shift and go to state 126
    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statement                      shift and go to state 24
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 115

    (37) from -> FROM expression TO expression DO FUNC NL . statements END
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statements                     shift and go to state 127
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 116

    (42) from -> FROM expression TO expression DO FUNC error . statements END
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statements                     shift and go to state 128
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 117

    (46) from -> FROM expression TO expression DO error NL . statements END
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statements                     shift and go to state 129
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 118

    (39) from -> FROM expression TO expression WITH STEP expression . DO FUNC NL statements END
    (40) from -> FROM expression TO expression WITH STEP expression . call_func
    (41) from -> FROM expression TO expression WITH STEP expression . DO FUNC error statements END
    (45) from -> FROM expression TO expression WITH STEP expression . DO error NL statements END
    (48) from -> FROM expression TO expression WITH STEP expression . error FUNC NL statements END
    (34) operation -> expression . PLUS expression
    (35) operation -> expression . MINUS expression
    (57) logic_oper -> expression . AND expression
    (58) logic_oper -> expression . OR expression
    (49) call_func -> . DO STR

    DO              shift and go to state 130
    error           shift and go to state 132
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    AND             shift and go to state 61
    OR              shift and go to state 62

    call_func                      shift and go to state 131

state 119

    (47) from -> FROM expression TO expression error FUNC NL . statements END
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statements                     shift and go to state 133
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 120

    (43) from -> FROM expression error expression WITH STEP expression . DO FUNC NL statements END
    (34) operation -> expression . PLUS expression
    (35) operation -> expression . MINUS expression
    (57) logic_oper -> expression . AND expression
    (58) logic_oper -> expression . OR expression

    DO              shift and go to state 134
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    AND             shift and go to state 61
    OR              shift and go to state 62


state 121

    (44) from -> FROM expression error expression DO FUNC NL . statements END
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statements                     shift and go to state 135
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 122

    (51) if -> IF expression DO FUNC NL statements END .

    NL              reduce using rule 51 (if -> IF expression DO FUNC NL statements END .)
    EOE             reduce using rule 51 (if -> IF expression DO FUNC NL statements END .)


state 123

    (52) if -> IF expression DO FUNC error statements END .

    NL              reduce using rule 52 (if -> IF expression DO FUNC error statements END .)
    EOE             reduce using rule 52 (if -> IF expression DO FUNC error statements END .)


state 124

    (53) if -> IF expression DO error NL statements END .

    NL              reduce using rule 53 (if -> IF expression DO error NL statements END .)
    EOE             reduce using rule 53 (if -> IF expression DO error NL statements END .)


state 125

    (56) if -> IF expression error FUNC NL statements END .

    NL              reduce using rule 56 (if -> IF expression error FUNC NL statements END .)
    EOE             reduce using rule 56 (if -> IF expression error FUNC NL statements END .)


state 126

    (54) if -> IF error DO FUNC NL statements END .

    NL              reduce using rule 54 (if -> IF error DO FUNC NL statements END .)
    EOE             reduce using rule 54 (if -> IF error DO FUNC NL statements END .)


state 127

    (37) from -> FROM expression TO expression DO FUNC NL statements . END
    (2) statements -> statements . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    END             shift and go to state 136
    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statement                      shift and go to state 24
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 128

    (42) from -> FROM expression TO expression DO FUNC error statements . END
    (2) statements -> statements . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    END             shift and go to state 137
    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statement                      shift and go to state 24
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 129

    (46) from -> FROM expression TO expression DO error NL statements . END
    (2) statements -> statements . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    END             shift and go to state 138
    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statement                      shift and go to state 24
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 130

    (39) from -> FROM expression TO expression WITH STEP expression DO . FUNC NL statements END
    (41) from -> FROM expression TO expression WITH STEP expression DO . FUNC error statements END
    (45) from -> FROM expression TO expression WITH STEP expression DO . error NL statements END
    (49) call_func -> DO . STR

    FUNC            shift and go to state 139
    error           shift and go to state 140
    STR             shift and go to state 45


state 131

    (40) from -> FROM expression TO expression WITH STEP expression call_func .

    NL              reduce using rule 40 (from -> FROM expression TO expression WITH STEP expression call_func .)
    EOE             reduce using rule 40 (from -> FROM expression TO expression WITH STEP expression call_func .)


state 132

    (48) from -> FROM expression TO expression WITH STEP expression error . FUNC NL statements END

    FUNC            shift and go to state 141


state 133

    (47) from -> FROM expression TO expression error FUNC NL statements . END
    (2) statements -> statements . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    END             shift and go to state 142
    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statement                      shift and go to state 24
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 134

    (43) from -> FROM expression error expression WITH STEP expression DO . FUNC NL statements END

    FUNC            shift and go to state 143


state 135

    (44) from -> FROM expression error expression DO FUNC NL statements . END
    (2) statements -> statements . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    END             shift and go to state 144
    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statement                      shift and go to state 24
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 136

    (37) from -> FROM expression TO expression DO FUNC NL statements END .

    NL              reduce using rule 37 (from -> FROM expression TO expression DO FUNC NL statements END .)
    EOE             reduce using rule 37 (from -> FROM expression TO expression DO FUNC NL statements END .)


state 137

    (42) from -> FROM expression TO expression DO FUNC error statements END .

    NL              reduce using rule 42 (from -> FROM expression TO expression DO FUNC error statements END .)
    EOE             reduce using rule 42 (from -> FROM expression TO expression DO FUNC error statements END .)


state 138

    (46) from -> FROM expression TO expression DO error NL statements END .

    NL              reduce using rule 46 (from -> FROM expression TO expression DO error NL statements END .)
    EOE             reduce using rule 46 (from -> FROM expression TO expression DO error NL statements END .)


state 139

    (39) from -> FROM expression TO expression WITH STEP expression DO FUNC . NL statements END
    (41) from -> FROM expression TO expression WITH STEP expression DO FUNC . error statements END

    NL              shift and go to state 145
    error           shift and go to state 146


state 140

    (45) from -> FROM expression TO expression WITH STEP expression DO error . NL statements END

    NL              shift and go to state 147


state 141

    (48) from -> FROM expression TO expression WITH STEP expression error FUNC . NL statements END

    NL              shift and go to state 148


state 142

    (47) from -> FROM expression TO expression error FUNC NL statements END .

    NL              reduce using rule 47 (from -> FROM expression TO expression error FUNC NL statements END .)
    EOE             reduce using rule 47 (from -> FROM expression TO expression error FUNC NL statements END .)


state 143

    (43) from -> FROM expression error expression WITH STEP expression DO FUNC . NL statements END

    NL              shift and go to state 149


state 144

    (44) from -> FROM expression error expression DO FUNC NL statements END .

    NL              reduce using rule 44 (from -> FROM expression error expression DO FUNC NL statements END .)
    EOE             reduce using rule 44 (from -> FROM expression error expression DO FUNC NL statements END .)


state 145

    (39) from -> FROM expression TO expression WITH STEP expression DO FUNC NL . statements END
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statements                     shift and go to state 150
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 146

    (41) from -> FROM expression TO expression WITH STEP expression DO FUNC error . statements END
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statements                     shift and go to state 151
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 147

    (45) from -> FROM expression TO expression WITH STEP expression DO error NL . statements END
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statements                     shift and go to state 152
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 148

    (48) from -> FROM expression TO expression WITH STEP expression error FUNC NL . statements END
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statements                     shift and go to state 153
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 149

    (43) from -> FROM expression error expression WITH STEP expression DO FUNC NL . statements END
    (2) statements -> . statements statement
    (3) statements -> . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statements                     shift and go to state 154
    statement                      shift and go to state 3
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 150

    (39) from -> FROM expression TO expression WITH STEP expression DO FUNC NL statements . END
    (2) statements -> statements . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    END             shift and go to state 155
    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statement                      shift and go to state 24
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 151

    (41) from -> FROM expression TO expression WITH STEP expression DO FUNC error statements . END
    (2) statements -> statements . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    END             shift and go to state 156
    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statement                      shift and go to state 24
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 152

    (45) from -> FROM expression TO expression WITH STEP expression DO error NL statements . END
    (2) statements -> statements . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    END             shift and go to state 157
    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statement                      shift and go to state 24
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 153

    (48) from -> FROM expression TO expression WITH STEP expression error FUNC NL statements . END
    (2) statements -> statements . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    END             shift and go to state 158
    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statement                      shift and go to state 24
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 154

    (43) from -> FROM expression error expression WITH STEP expression DO FUNC NL statements . END
    (2) statements -> statements . statement
    (4) statement -> . assignment eoe
    (5) statement -> . from eoe
    (6) statement -> . var_const eoe
    (7) statement -> . if eoe
    (8) statement -> . function eoe
    (9) statement -> . call_func eoe
    (10) statement -> . commands eoe
    (15) assignment -> . variable EQ expression
    (16) assignment -> . variable EQ error
    (37) from -> . FROM expression TO expression DO FUNC NL statements END
    (38) from -> . FROM expression TO expression call_func
    (39) from -> . FROM expression TO expression WITH STEP expression DO FUNC NL statements END
    (40) from -> . FROM expression TO expression WITH STEP expression call_func
    (41) from -> . FROM expression TO expression WITH STEP expression DO FUNC error statements END
    (42) from -> . FROM expression TO expression DO FUNC error statements END
    (43) from -> . FROM expression error expression WITH STEP expression DO FUNC NL statements END
    (44) from -> . FROM expression error expression DO FUNC NL statements END
    (45) from -> . FROM expression TO expression WITH STEP expression DO error NL statements END
    (46) from -> . FROM expression TO expression DO error NL statements END
    (47) from -> . FROM expression TO expression error FUNC NL statements END
    (48) from -> . FROM expression TO expression WITH STEP expression error FUNC NL statements END
    (28) var_const -> . variable
    (29) var_const -> . const
    (50) if -> . IF expression call_func
    (51) if -> . IF expression DO FUNC NL statements END
    (52) if -> . IF expression DO FUNC error statements END
    (53) if -> . IF expression DO error NL statements END
    (54) if -> . IF error DO FUNC NL statements END
    (55) if -> . IF error call_func
    (56) if -> . IF expression error FUNC NL statements END
    (61) function -> . FUNC STR NL statements END
    (62) function -> . FUNC STR error statements END
    (63) function -> . error STR NL statements END
    (49) call_func -> . DO STR
    (11) commands -> . COMMAND MOVE
    (17) variable -> . STR index
    (18) variable -> . STR OPBR index CLBR
    (30) const -> . INT
    (31) const -> . FLOAT
    (32) const -> . LOGIC
    (33) const -> . TCELL

    END             shift and go to state 159
    FROM            shift and go to state 13
    IF              shift and go to state 17
    FUNC            shift and go to state 15
    error           shift and go to state 12
    DO              shift and go to state 14
    COMMAND         shift and go to state 19
    STR             shift and go to state 18
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    LOGIC           shift and go to state 22
    TCELL           shift and go to state 23

    statement                      shift and go to state 24
    assignment                     shift and go to state 4
    from                           shift and go to state 5
    var_const                      shift and go to state 6
    if                             shift and go to state 7
    function                       shift and go to state 8
    call_func                      shift and go to state 9
    commands                       shift and go to state 10
    variable                       shift and go to state 11
    const                          shift and go to state 16

state 155

    (39) from -> FROM expression TO expression WITH STEP expression DO FUNC NL statements END .

    NL              reduce using rule 39 (from -> FROM expression TO expression WITH STEP expression DO FUNC NL statements END .)
    EOE             reduce using rule 39 (from -> FROM expression TO expression WITH STEP expression DO FUNC NL statements END .)


state 156

    (41) from -> FROM expression TO expression WITH STEP expression DO FUNC error statements END .

    NL              reduce using rule 41 (from -> FROM expression TO expression WITH STEP expression DO FUNC error statements END .)
    EOE             reduce using rule 41 (from -> FROM expression TO expression WITH STEP expression DO FUNC error statements END .)


state 157

    (45) from -> FROM expression TO expression WITH STEP expression DO error NL statements END .

    NL              reduce using rule 45 (from -> FROM expression TO expression WITH STEP expression DO error NL statements END .)
    EOE             reduce using rule 45 (from -> FROM expression TO expression WITH STEP expression DO error NL statements END .)


state 158

    (48) from -> FROM expression TO expression WITH STEP expression error FUNC NL statements END .

    NL              reduce using rule 48 (from -> FROM expression TO expression WITH STEP expression error FUNC NL statements END .)
    EOE             reduce using rule 48 (from -> FROM expression TO expression WITH STEP expression error FUNC NL statements END .)


state 159

    (43) from -> FROM expression error expression WITH STEP expression DO FUNC NL statements END .

    NL              reduce using rule 43 (from -> FROM expression error expression WITH STEP expression DO FUNC NL statements END .)
    EOE             reduce using rule 43 (from -> FROM expression error expression WITH STEP expression DO FUNC NL statements END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 64 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 64 resolved as shift
WARNING: shift/reduce conflict for AND in state 64 resolved as shift
WARNING: shift/reduce conflict for OR in state 64 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 77 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 77 resolved as shift
WARNING: shift/reduce conflict for AND in state 77 resolved as shift
WARNING: shift/reduce conflict for OR in state 77 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 78 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 78 resolved as shift
WARNING: shift/reduce conflict for AND in state 78 resolved as shift
WARNING: shift/reduce conflict for OR in state 78 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 79 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 79 resolved as shift
WARNING: shift/reduce conflict for AND in state 79 resolved as shift
WARNING: shift/reduce conflict for OR in state 79 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 80 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for AND in state 80 resolved as shift
WARNING: shift/reduce conflict for OR in state 80 resolved as shift
WARNING: reduce/reduce conflict in state 43 resolved using rule (var_const -> variable)
WARNING: rejected rule (logic_oper -> variable) in state 43
WARNING: Rule (logic_oper -> variable) is never reduced
